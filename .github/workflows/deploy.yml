name: EC2 Deploy via terraform

on:
  push:
    branches:
      - main
      - feature/devops-assignment-3

    tags:
      - deploy-dev
      - deploy-prod

jobs:
  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-east-1

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with: 
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7    

      - name: Terraform init
        working-directory: ./terraform
        run: terraform init

      - name: Terraform apply
        working-directory: ./terraform
        run: terraform apply -auto-approve -var-file="dev.tfvars"

      - name: Get EC2 Public IP
        id: ec2_ip
        run: |
          ip=$(aws ec2 describe-instances \
            --filters "Name=tag:Name,Values=techeazy-instance" \
            --query "Reservations[*].Instances[*].PublicIpAddress" \
            --output text | tr -d '\r' | tr -d '\n' | awk '{print $1}')

          if [[ $ip =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
            echo "EC2_PUBLIC_IP=$ip" >> $GITHUB_ENV
            echo "::debug::EC2_PUBLIC_IP is $ip"
          else
            echo "::error::Invalid IP address format: $ip"
            exit 1
          fi

      - name: Wait for EC2 to be ready
        run: |
          echo "Waiting for EC2 instance to be ready..."
          sleep 120  # Increased wait time for user-data script to complete

      - name: Wait for SSH to be available
        run: |
          for i in {1..30}; do
            if nc -z ${{ env.EC2_PUBLIC_IP }} 22; then
              echo "SSH is available"
              break
            fi
            echo "Waiting for SSH... (attempt $i/30)"
            sleep 10
          done

      - name: Run Deployment Script via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.EC2_PUBLIC_IP }}
          username: ec2-user
          key: ${{ secrets.INSTANCE_KEY }}
          timeout: 300s
          script: |
            # Check if repository exists, if not clone it
            if [ ! -d "/home/ec2-user/techeazy-devops" ]; then
              echo "Repository not found, cloning..."
              git clone https://github.com/sohampatil44/techeazy-devops.git
              cd techeazy-devops
            else
              echo "Repository exists, updating..."
              cd /home/ec2-user/techeazy-devops
              git pull origin main
            fi
            
            # Make deploy script executable
            chmod +x scripts/deploy.sh
            
            # Run deploy script
            ./scripts/deploy.sh techeazy-bucket

      - name: Verify App Health
        run: |
          echo "Waiting for application to start..."
          sleep 30
          
          for i in {1..10}; do
            if curl --fail --connect-timeout 10 http://${{ env.EC2_PUBLIC_IP }}; then
              echo "App is healthy"
              exit 0
            fi
            echo "Health check failed, retrying in 10s... (attempt $i/10)"
            sleep 10
          done
          echo "App health check failed after 10 attempts"
          exit 1